@model Online_game_store.Models.Game

@{
    ViewBag.Title = "Create";
}


<div class="row">
	<div class="col-md-8 col-md-offset-2">
		<section id="box">

			@using (Html.BeginForm())
			{
				@Html.AntiForgeryToken()

			<div class="form-horizontal">
				<h2 class="text-center text-success">Create</h2>
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group">
					@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Desctiption, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Desctiption, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Desctiption, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						<!--Html.EditorFor(model => model.Genre, new { htmlAttributes = new { class = "form-control" } })-->
						@Html.DropDownList("Genre", new SelectList(new[] { "Fps", "Rpg", "Strategy", "Kids", "Sports" }))

						@Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">

					<div class="col-md-offset-2 col-md-4">
						@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning outline" })
					</div>
					<div >
						<input type="submit" value="Create" class="btn btn-success outline" />
					</div>
				</div>

				
			</div>
			}

			
			</section>
</div>
</div>
<style>
	#box {
		border-radius: 0 0 4px 4px;
		box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.08);
		padding: 50px;
		margin-top: 30px;
	}

	.outline {
		background-color: transparent;
		color: inherit;
		transition: all .25s;
		float: left;
		margin-right: 30px;
	}

	.btn-success.outline {
		color: #5cb85c;
	}

		.btn-success.outline:hover {
			color: #fff;
		}

	.btn-warning.outline {
		color: orange;
	}

		.btn-warning.outline:hover {
			color: #fff;
		}

</style>
